{"version":3,"sources":["features/tasks/common/localStorage.js","features/tasks/common/dateHelper.js","features/tasks/tasksSlice.js","features/tasks/common/swapPositions.js","features/tasks/calendar/tables.js","features/tasks/common/convertHex.js","features/tasks/calendar/CalendarHeader.js","features/tasks/calendar/SidebarTasksNestedList.js","features/tasks/calendar/SidebarTasksList.js","features/tasks/calendar/CalendarSidebar.js","features/tasks/common/colors.js","features/tasks/dialogs/ColorPicker.js","features/tasks/dialogs/DatePicker.js","features/tasks/dialogs/MainAndParentOptions.js","features/tasks/dialogs/SelectWithAdd.js","features/tasks/dialogs/AddTaskForm.js","features/tasks/dialogs/AddTaskDialog.js","features/tasks/dialogs/DeleteDialog.js","features/tasks/dialogs/DraggableDialog.js","features/tasks/calendar/LetterAvatar.js","features/tasks/calendar/TaskCompletionIndicator.js","features/tasks/calendar/CalendarTaskPopper.js","features/tasks/calendar/CalendarMainTask.js","features/tasks/calendar/CalendarTask.js","features/tasks/calendar/CalendarTasks.js","features/tasks/dialogs/OptionsDialog.js","features/tasks/dialogs/SnackbarStatus.js","features/tasks/dialogs/FABs.js","features/tasks/common/useFirstRender.js","features/tasks/calendar/Calendar.js","features/tasks/dialogs/AlertDialog.js","features/tasks/Tasks.js","App.js","Theme.js","app/store.js","serviceWorker.js","index.js"],"names":["checkConsent","serializedState","localStorage","getItem","JSON","parse","err","today","day","Date","toDateString","addDays","baseDate","howManyDays","dateString","dateMS","Math","floor","customGetDate","selector","date","getDate","getDay","getMonth","getFullYear","toLocaleDateString","undefined","year","month","dateDifference","firstDate","secondDate","datesBetween","skip","difference","dates","console","warn","index","push","splice","indexOf","countOccurrences","firstDay","lastDay","map","Set","selected","filter","check","length","tasksSlice","createSlice","name","initialState","view","darkMode","gridLines","custom","categories","people","calendar","headers","shortDay","data","lastMessage","reducers","setDarkMode","state","action","payload","setGridLines","setCustom","setToday","setCalendar","addCategory","Array","from","addPerson","addEditMainTask","mainTaskIndex","findIndex","mainTask","id","addEditTask","targetParentIndex","target","taskIndex","tasks","task","deleteTask","filteredArray","parent","setCompletion","completion","setMessage","reorderTasks","tasksToReorder","array","a","b","swapPositions","actions","setScrollPosition","setMaxScrollPosition","selectDarkMode","selectGridLines","selectCustom","selectTasks","selectToday","selectCalendar","selectLastMessage","styled","div","TableSection","TableSectionTasks","TableRow","props","gtc","TableHeaderCell","color","headersCount","TableCell","TableTask","hex","result","exec","parseInt","convertHex","HeaderContainer","CalendarHeader","useSelector","dispatch","useDispatch","theme","useTheme","monthCount","yearsCount","Object","values","val","useEffect","showYears","palette","divider","className","key","style","gridColumn","count","Typography","variant","title","display","justifyContent","alignItems","useStyles","makeStyles","root","width","backgroundColor","background","paper","nested","paddingLeft","spacing","height","textOverflow","SidebarTasksNestedList","classes","useState","startOpen","open","setOpen","handleReorder","direction","List","padding","paddingBottom","wordBreak","component","aria-labelledby","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","flexDirection","IconButton","size","marginBottom","document","getElementById","scrollIntoView","behavior","alignTo","ListItemSecondaryAction","secondary","SidebarTasksList","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","content","flexGrow","overflowX","overflowY","paddingTop","contentShift","cellSize","dense","minHeight","rootAppBar","zIndex","CalendarSidebar","AppBar","position","clsx","Toolbar","aria-label","edge","noWrap","Drawer","anchor","Divider","text","borderBottom","align","children","colors","select","ColorPicker","FormControl","Select","value","onChange","autoWidth","displayEmpty","MenuItem","disabled","entries","colorName","colorValue","ListItemIcon","fontSize","DatePicker","utils","DateFnsUtils","fullWidth","format","margin","label","startDate","KeyboardButtonProps","MainAndParentOptions","list","forEach","FormGroup","FormControlLabel","control","Checkbox","checked","e","SelectWithAdd","createFilterOptions","Autocomplete","event","newValue","inputValue","filterOptions","options","params","filtered","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","TextField","form","gridTemplateColumns","columnGap","formControl","AddTaskForm","category","person","initialData","description","responsible","setData","handleChangeData","sendData","dataValidation","inputData","valid","noValidate","autoComplete","onBlur","inputProps","maxlength","multiline","rows","Number","type","InputLabelProps","shrink","AddTaskDialog","validData","setValidData","handleClose","Fragment","DialogTitle","cursor","DialogContent","formData","isDataValid","DialogActions","Tooltip","Button","random","endDate","objectToSave","message","leftBoundaryDate","rightBoundaryDate","min","max","startIcon","keys","DeleteDialog","DialogContentText","autoFocus","PaperComponent","handle","cancel","Paper","DraggableDialog","Dialog","onClose","PaperProps","orange","getContrastText","deepOrange","purple","deepPurple","LetterAvatar","Avatar","charAt","TaskCompletionIndicator","slice","setValue","edit","setEdit","roundedValue","round","disableRipple","completionValue","log","InputProps","endAdornment","InputAdornment","CalendarTaskPopper","openEdit","setOpenEdit","openDelete","setOpenDelete","handleCloseEdit","handleCloseDelete","Container","disableGutters","maxWidth","Card","CardHeader","subheader","CardContent","CardActions","click","CalendarMainTask","anchorEl","setAnchorEl","handleClick","currentTarget","bottom","paddingRight","overflow","Popper","placement","TransitionProps","Fade","Header","CalendarTask","checkColors","mainTaskDates","start","end","Grow","transformOrigin","arrow","opacity","ContainerTasks","headerCount","CalendarTasks","tasksRef","useRef","ref","SwitchLabels","handleChangeRedux","FormLabel","Switch","OptionsDialog","SnackbarStatus","Snackbar","anchorOrigin","vertical","horizontal","close","autoHideDuration","margin2","right","margin1","backdrop","centralContainer","central","FABs","isFirstRender","firstRender","current","useFirstRender","openOptions","setOpenOptions","openAdd","setOpenAdd","openBackdrop","setOpenBackdrop","openSnackbar","setOpenSnackbar","handleOpen","Box","Fab","Backdrop","Calendar","AlertDialog","storageConsent","React","decision","stringify","setItem","saveConsent","Tasks","App","prefersDarkMode","useMediaQuery","primaryColor","useMemo","createMuiTheme","main","tonalOffset","Theme","cookies","ThemeProvider","CssBaseline","persistedState","loadLocalStorage","store","configureStore","reducer","tasksReducer","preloadedState","subscribe","saveLocalStorage","getState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05e20385.chunk.js","sourcesContent":["const loadLocalStorage = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('chartData');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst saveLocalStorage = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('chartData', serializedState);\r\n  } catch {\r\n    console.warn(\"Save to localStorage failed\")\r\n  }\r\n};\r\n\r\nconst saveConsent = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('consent', serializedState);\r\n  } catch {\r\n    console.warn(\"Save to localStorage failed\")\r\n  }\r\n};\r\n\r\nconst checkConsent = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('consent');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport { loadLocalStorage, saveLocalStorage, saveConsent, checkConsent }","\r\n// all function input and return is in ms, unless otherwise stated\r\nconst now = () => {\r\n  return Date.parse(new Date())\r\n}\r\n\r\nconst today = () => {\r\n  const day = ((new Date()).toDateString())           // doing this to be sure that I only get day, with 0 hours and minutes\r\n  const today = Date.parse(day)\r\n  return today\r\n}\r\n\r\nconst addDays = (baseDate, howManyDays = 0) => {\r\n  const dateString = ((new Date(baseDate)).toDateString())            // processing dates like this, so it accepts both ms and yyyy-mm-dd input (default for input[date])\r\n  const dateMS = Date.parse(dateString)\r\n  return (dateMS + 86400000 * Math.floor(howManyDays))          // doing this to be sure that I only get day, with 0 hours and minutes\r\n}\r\n\r\n// return date's chosen thingy - day in number [1,31]; month in string, year in number\r\nconst customGetDate = (baseDate, selector) => {\r\n  const date = new Date(baseDate)\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n  const daysAbbr = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.']\r\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n  const monthsAbbr = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'June', 'July', 'Aug.', 'Sep.', 'Oct.', 'Nov.', 'Dec.']\r\n  const options = { year: 'numeric', month: 'numeric', day: 'numeric' };\r\n\r\n  switch (selector) {\r\n    case 'day':\r\n      return date.getDate()\r\n    case 'day-of-the-week':\r\n      return days[date.getDay()]\r\n    case 'day-of-the-week-abbr':\r\n      return daysAbbr[date.getDay()]\r\n    case 'month':\r\n      return months[date.getMonth()]\r\n    case 'month-abbr':\r\n      return monthsAbbr[date.getMonth()]\r\n    case 'year':\r\n      return date.getFullYear()\r\n    default:\r\n      return date.toLocaleDateString(undefined, options)\r\n  }\r\n}\r\n\r\n// in days\r\nconst dateDifference = (firstDate, secondDate) => {\r\n  const difference = Math.floor((secondDate - firstDate) / 86400000)\r\n  return difference\r\n}\r\n\r\n// const taskDuration = (firstDate, secondDate) => {\r\n//   const duration = Math.floor((secondDate - firstDate) / 86400000) + 1\r\n//   return duration\r\n// }\r\n\r\n// returns array of days between two dates (in ms)\r\nconst datesBetween = (firstDate, secondDate, skip = null) => {\r\n  const difference = dateDifference(firstDate, secondDate);\r\n\r\n  let dates = []\r\n\r\n  if (difference < 0) {\r\n    console.warn('Wrong input')\r\n    return ['error']\r\n  } else {\r\n    for (let index = 0; index <= difference; index++) {\r\n      dates.push(addDays(firstDate, index))\r\n    }\r\n  }\r\n\r\n  if (skip !== null) {\r\n    dates.splice(dates.indexOf(skip[0]) + 1, skip[1] - 1)\r\n  }\r\n  return dates\r\n}\r\n\r\n//      returns an object consisting of objects with number of occurences\r\n//      [{title: \"Jun`e\", count: 24}, {title: \"July\", count: 17}]\r\n//      to use with `grid-column: span ${count}`\r\nconst countOccurrences = (firstDay, lastDay, selector) => {\r\n  const dates = datesBetween(firstDay, lastDay).map(day => customGetDate(day, selector))\r\n  let countBySelector = [...new Set(dates)].map(\r\n    selected => {\r\n      return {\r\n        'title': selected,\r\n        'count': dates.filter(check => check === selected).length\r\n      }\r\n    });\r\n  return countBySelector\r\n}\r\n\r\n\r\nexport {\r\n  now,\r\n  today,\r\n  addDays,\r\n  customGetDate,\r\n  dateDifference,\r\n  datesBetween,\r\n  countOccurrences\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { today, addDays } from './common/dateHelper';\r\nimport { swapPositions } from './common/swapPositions';\r\n\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: {\r\n    view: {\r\n      darkMode: null,\r\n      gridLines: true,\r\n    },\r\n    custom: {\r\n      categories: ['default', 'frontend', 'backend', 'UX', 'UI', 'setup'],\r\n      people: ['me', 'Person', 'Elon Musk', '初音ミク', '2B', 'Wheatley'],\r\n    },\r\n    calendar: {\r\n      today: today(),       // all dates are to be stored in ms so they can easily be converted \r\n      firstDay: addDays(today(), -20),\r\n      lastDay: addDays(today(), 20),\r\n      headers: {\r\n        year: null,\r\n        month: true,\r\n        shortDay: true,\r\n        day: true\r\n      },\r\n    },\r\n    data: [],\r\n    lastMessage: 'default message...',\r\n  },\r\n  reducers: {\r\n    setDarkMode: (state, action) => {\r\n      state.view.darkMode = action.payload\r\n    },\r\n\r\n    setGridLines: (state, action) => {\r\n      state.view.gridLines = action.payload\r\n    },\r\n\r\n    setCustom: (state, action) => {\r\n      state.custom = { ...state.custom, ...action.payload };\r\n    },\r\n\r\n    setToday: (state, action) => {\r\n      state.calendar.today = action.payload\r\n    },\r\n\r\n    setCalendar: (state, action) => {\r\n      state.calendar = { ...state.calendar, ...action.payload };\r\n    },\r\n\r\n    addCategory: (state, action) => {\r\n      state.custom.categories.push(action.payload);\r\n      state.custom.categories = Array.from(new Set(state.custom.categories))\r\n    },\r\n\r\n    addPerson: (state, action) => {\r\n      state.custom.people.push(action.payload);\r\n      state.custom.people = Array.from(new Set(state.custom.people))\r\n    },\r\n\r\n    addEditMainTask: (state, action) => {\r\n      const mainTaskIndex = state.data.findIndex((mainTask) => mainTask.id === action.payload.id)\r\n\r\n      if (mainTaskIndex === -1) {\r\n        state.data.push(action.payload);\r\n      } else {\r\n        state.data[mainTaskIndex] = action.payload\r\n      }\r\n    },\r\n\r\n    addEditTask: (state, action) => {\r\n      const targetParentIndex = state.data.findIndex((mainTask) => mainTask.id === action.payload.target)\r\n      //check if task already exists\r\n      const taskIndex = state.data[targetParentIndex].tasks.findIndex((task) => task.id === action.payload.data.id)\r\n      if (taskIndex === -1) {\r\n        state.data[targetParentIndex].tasks.push(action.payload.data)\r\n      } else {\r\n        state.data[targetParentIndex].tasks[taskIndex] = action.payload.data\r\n      }\r\n    },\r\n\r\n    deleteTask: (state, action) => {\r\n      if (action.payload.mainTask) {\r\n        const filteredArray = state.data.filter((mainTask) => mainTask.id !== action.payload.id)\r\n        state.data = filteredArray\r\n      } else {\r\n        const targetParentIndex = state.data.findIndex((mainTask) => mainTask.id === action.payload.parent)\r\n        const filteredArray = state.data[targetParentIndex].tasks.filter((task) => task.id !== action.payload.id)\r\n        state.data[targetParentIndex].tasks = filteredArray\r\n      }\r\n    },\r\n\r\n    setCompletion: (state, action) => {\r\n      const targetParentIndex = state.data.findIndex((mainTask) => mainTask.id === action.payload.data.parent)\r\n\r\n      const taskIndex = state.data[targetParentIndex].tasks.findIndex((task) => task.id === action.payload.data.id)\r\n      if (taskIndex === -1) {\r\n        console.warn('error')\r\n      } else {\r\n        state.data[targetParentIndex].tasks[taskIndex].completion = action.payload.completion\r\n      }\r\n    },\r\n\r\n    setMessage: (state, action) => {\r\n      state.lastMessage = action.payload\r\n    },\r\n\r\n    reorderTasks: (state, action) => {\r\n      const targetParentIndex = state.data.findIndex((mainTask) => mainTask.id === action.payload.data.parent)\r\n      const taskIndex = state.data[targetParentIndex].tasks.findIndex((task) => task.id === action.payload.data.id)\r\n      const tasksToReorder = state.data[targetParentIndex].tasks\r\n      if (taskIndex === -1) {\r\n        console.warn('error')\r\n      } else {\r\n        swapPositions(tasksToReorder, taskIndex, (taskIndex + action.payload.target));\r\n        state.data[targetParentIndex].tasks = tasksToReorder\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nconst { setDarkMode, setGridLines, setCustom, setScrollPosition, setMaxScrollPosition, addCategory, addPerson, addEditMainTask, addEditTask, setToday, setCalendar, deleteTask, setCompletion, setMessage, reorderTasks } = tasksSlice.actions;\r\n\r\nconst selectDarkMode = state => state.tasks.view.darkMode;\r\nconst selectGridLines = state => state.tasks.view.gridLines;\r\nconst selectCustom = state => state.tasks.custom;\r\nconst selectScrollPosition = state => state.tasks.scrollPosition;\r\nconst selectMaxScrollPosition = state => state.tasks.maxScrollPosition;\r\nconst selectCustomCategories = state => state.tasks.custom.categories;\r\nconst selectTasks = state => state.tasks.data;\r\nconst selectToday = state => state.tasks.calendar.today;\r\nconst selectCalendar = state => state.tasks.calendar;\r\nconst selectLastMessage = state => state.tasks.lastMessage;\r\n\r\nexport {\r\n  setDarkMode,\r\n  setGridLines,\r\n  setCustom,\r\n  setScrollPosition,\r\n  setMaxScrollPosition,\r\n  addCategory,\r\n  addPerson,\r\n  addEditMainTask,\r\n  addEditTask,\r\n  setToday,\r\n  setCalendar,\r\n  deleteTask,\r\n  setCompletion,\r\n  setMessage,\r\n  reorderTasks,\r\n  selectDarkMode,\r\n  selectGridLines,\r\n  selectCustom,\r\n  selectScrollPosition,\r\n  selectMaxScrollPosition,\r\n  selectCustomCategories,\r\n  selectTasks,\r\n  selectToday,\r\n  selectCalendar,\r\n  selectLastMessage,\r\n}\r\nexport default tasksSlice.reducer;\r\n\r\n","const swapPositions = (array, a, b) => {\r\n  [array[a], array[b]] = [array[b], array[a]]\r\n}\r\n\r\nexport { swapPositions }\r\n","import styled from 'styled-components'\r\nimport { convertHex } from '../common/convertHex';\r\n\r\nconst cellSize = '3rem'\r\nconst gapSize = '0px'\r\n\r\nconst Table = styled.div`\r\n    display: grid;\r\n    row-gap: 1.5rem;\r\n`;\r\n\r\nconst TableSection = styled.div`\r\n    display: grid;\r\n    grid-auto-rows: ${cellSize};\r\n    row-gap: ${gapSize};\r\n`;\r\n\r\nconst TableSectionTasks = styled(TableSection)`\r\n    padding-bottom: calc(${cellSize} / 2);\r\n`;\r\n\r\nconst TableRow = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${props => props.gtc};\r\n    grid-auto-rows: ${cellSize};\r\n    column-gap: ${gapSize};\r\n`;\r\n\r\nconst TableHeaderCell = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    border: 1px solid ${props => props.color};\r\n    &[class~=\"today\"] {\r\n      position: relative;\r\n  }\r\n    &[id~=\"${props => props.id}\"][class~=\"today\"]::after {\r\n      content:'';\r\n      position: absolute;\r\n      top: calc( -1 * calc(${cellSize} * ${props => props.headersCount}));\r\n      // left: 0;\r\n      width: ${cellSize};\r\n      // height: calc(88vh + 1.5 * ${cellSize});\r\n      height: calc(100vh - 18px);\r\n      background-color: rgba(100%, 9%, 26.7%, 0.5);\r\n  }\r\n`;\r\n\r\nconst TableCell = styled.div`\r\n    &:hover {\r\n        background-color: #1a8a98;\r\n    }\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    border: 1px solid ${props => props.color}; \r\n`;\r\n\r\nconst TableTask = styled.div`\r\n  background-color: ${props => props.color};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color:  ${props => convertHex(props.color)};\r\n  }\r\n  transition: all 0.2s ease;\r\n`;\r\n\r\nexport {\r\n  cellSize,\r\n  gapSize,\r\n  Table,\r\n  TableSection,\r\n  TableSectionTasks,\r\n  TableRow,\r\n  TableHeaderCell,\r\n  TableCell,\r\n  TableTask\r\n}","const convertHex = (hex) => {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},0.5)` : null;\r\n}\r\nexport { convertHex }","import { Typography, useTheme } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { countOccurrences, customGetDate, dateDifference, datesBetween } from '../common/dateHelper';\r\nimport { selectCalendar, selectToday, setCalendar } from '../tasksSlice';\r\nimport {\r\n  cellSize,\r\n  TableHeaderCell, TableRow, TableSection\r\n} from './tables';\r\n\r\nconst HeaderContainer = styled.div`\r\n  z-index: 10;\r\n  width: max-content;\r\n  background-color: #3f51b5;\r\n  border: 1px solid ${props => props.color};\r\n  scroll-behavior: smooth;\r\n  -ms-overflow-style: none;  /* Internet Explorer 10+ */\r\n  scrollbar-width: none;  /* Firefox */\r\n  &::-webkit-scrollbar { \r\n    display: none;  /* Safari and Chrome */\r\n}\r\n`\r\n\r\nconst CalendarHeader = () => {\r\n  const today = useSelector(selectToday)\r\n  const calendar = useSelector(selectCalendar)\r\n  const dispatch = useDispatch();\r\n  const gridLines = true;\r\n  const theme = useTheme();\r\n  const headers = calendar.headers;\r\n  const monthCount = countOccurrences(calendar.firstDay, calendar.lastDay, 'month')\r\n  const yearsCount = countOccurrences(calendar.firstDay, calendar.lastDay, 'year')\r\n  const gtc = `repeat(${dateDifference(calendar.firstDay, calendar.lastDay) + 1}, ${cellSize})`\r\n  const headersCount = Object.values(headers).filter(val => val).length\r\n  useEffect(() => {\r\n    if (headers.year === null) {\r\n      const showYears = (yearsCount.length === 1 ? false : true);\r\n      dispatch(setCalendar({ 'headers': { ...headers, ...{ 'year': showYears } } }))\r\n    }\r\n  })\r\n\r\n  return (\r\n    <HeaderContainer\r\n      color={theme.palette.divider}\r\n    >\r\n      <TableSection>\r\n        {(headers.year) &&\r\n          <TableRow\r\n            gtc={gtc}\r\n            className=\"years\">\r\n            {yearsCount.map((year, index) => {\r\n              return (\r\n                <TableHeaderCell\r\n                  color={theme.palette.divider}\r\n                  key={index}\r\n                  style={{\r\n                    gridColumn: `span ${year.count}`,\r\n                    color: '#fff'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h3\">\r\n                    {year.title}\r\n                  </Typography>\r\n                </TableHeaderCell>\r\n              )\r\n            })\r\n            }\r\n          </TableRow>\r\n        }\r\n        {(headers.month) &&\r\n          <TableRow\r\n            gtc={gtc}\r\n            className=\"months\"\r\n          >\r\n            {monthCount.map((month, index) => {\r\n              return (\r\n                <TableHeaderCell\r\n                  color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n                  key={index}\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    gridColumn: `span ${month.count}`,\r\n                    color: '#fff'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h4\">\r\n                    {month.title}\r\n                  </Typography>\r\n                </TableHeaderCell>\r\n              )\r\n            })\r\n            }\r\n\r\n          </TableRow>\r\n        }\r\n        {(headers.shortDay) &&\r\n          <TableRow\r\n            gtc={gtc}\r\n            className=\"short-days\"\r\n            style={{\r\n              color: '#fff'\r\n            }}\r\n          >\r\n            {datesBetween(calendar.firstDay, calendar.lastDay).map((day, index) => {\r\n              return (\r\n                <TableHeaderCell\r\n                  color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n                  className={day === today ? 'today' : 'else'}\r\n                  key={index}\r\n                  style={{\r\n                    color: '#fff'\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    {customGetDate(day, 'day-of-the-week-abbr')}\r\n                  </Typography>\r\n                </TableHeaderCell>\r\n              )\r\n            })}\r\n          </TableRow>\r\n        }\r\n        <TableRow\r\n          gtc={gtc}\r\n          className=\"days\"\r\n        >\r\n          {datesBetween(calendar.firstDay, calendar.lastDay).map((day, index) => {\r\n            return (\r\n              <TableHeaderCell\r\n                color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n                className={day === today ? 'today' : 'else'}\r\n                id={customGetDate(day)}\r\n                headersCount={headersCount}\r\n                key={index}\r\n                style={{\r\n                  color: '#fff'\r\n                }}\r\n              >\r\n                <Typography>\r\n                  {customGetDate(day, 'day')}\r\n                </Typography>\r\n              </TableHeaderCell>\r\n            )\r\n          })}\r\n        </TableRow>\r\n      </TableSection>\r\n      {/* <ScrollButtonLeft /> */}\r\n      {/* <ScrollButtonRight /> */}\r\n    </HeaderContainer >\r\n  )\r\n}\r\n\r\nexport { CalendarHeader };\r\n\r\n","import { IconButton, ListItemSecondaryAction } from '@material-ui/core';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\nimport { cellSize } from './tables';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { reorderTasks } from '../tasksSlice'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n    height: cellSize,\r\n    textOverflow: \"ellipsis\"\r\n  },\r\n}));\r\n\r\nconst SidebarTasksNestedList = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(props.startOpen);\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleReorder = (data, direction) => {\r\n    switch (direction) {\r\n      case 'up':\r\n        dispatch(reorderTasks({ data: data, target: -1 }))\r\n        break;\r\n      case 'down':\r\n        dispatch(reorderTasks({ data: data, target: 1 }))\r\n        break\r\n      default:\r\n        console.warn('reordering did not work')\r\n        break;\r\n    }\r\n  }\r\n\r\n  const scrollTo = (id) => {\r\n    document.getElementById(`task-${id}`).scrollIntoView({ behavior: 'smooth', alignTo: false });\r\n  }\r\n\r\n\r\n  return (\r\n    <List\r\n      style={{\r\n        padding: 0,\r\n        paddingBottom: '24px',\r\n        wordBreak: \"break-all\"\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"main task\"\r\n      className={classes.root}\r\n    >\r\n      <ListItem\r\n        button\r\n        onClick={handleClick}\r\n      >\r\n        <ListItemText\r\n          primary={props.title || props.data.title}\r\n        />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse\r\n        in={open}\r\n        timeout=\"auto\"\r\n        unmountOnExit>\r\n        <List\r\n          component=\"div\"\r\n          disablePadding>\r\n          {props.data.tasks.map((task, index) => {\r\n            return (\r\n              <ListItem\r\n                key={index}\r\n                className={classes.nested}\r\n              >\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n\r\n                  {index !== 0 &&\r\n                    <IconButton\r\n                      onClick={() => handleReorder(task, 'up')}\r\n                      size=\"small\"\r\n                      style={{ marginBottom: \"-10px\" }}>\r\n                      <ArrowDropUpIcon />\r\n                    </IconButton>\r\n                  }\r\n                  {index !== props.data.tasks.length - 1 &&\r\n\r\n                    <IconButton\r\n                      onClick={() => handleReorder(task, 'down')}\r\n                      size=\"small\">\r\n                      <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                  }\r\n                </div>\r\n                <ListItem\r\n                  onClick={() => scrollTo(task.id)}\r\n                  button >\r\n                  <ListItemText primary={task.title} />\r\n                </ListItem>\r\n                <ListItemSecondaryAction>\r\n                  <ListItemText secondary={task.completion} />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            )\r\n          })}\r\n        </List>\r\n      </Collapse>\r\n    </List>\r\n  );\r\n}\r\nexport { SidebarTasksNestedList };\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTasks } from '../tasksSlice';\r\nimport { List } from \"@material-ui/core\"\r\nimport { SidebarTasksNestedList } from './SidebarTasksNestedList'\r\n\r\nconst SidebarTasksList = () => {\r\n  const data = useSelector(selectTasks)\r\n\r\n  return (\r\n    <List style={{ padding: 0 }}>\r\n      {data.map((mainTask, index) => {\r\n        return (\r\n          < SidebarTasksNestedList\r\n            key={index}\r\n            data={mainTask}\r\n            startOpen={true}\r\n          />\r\n        )\r\n      })}\r\n    </List>\r\n  )\r\n}\r\n\r\n\r\nexport { SidebarTasksList }","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { ListItem, ListItemText, makeStyles, useTheme, AppBar, Divider, Drawer, IconButton, List, Toolbar, Typography } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { SidebarTasksList } from './SidebarTasksList';\r\nimport { cellSize } from './tables';\r\nimport { selectCalendar } from '../tasksSlice';\r\n\r\nconst drawerWidth = 360;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh'\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    paddingLeft: '0',\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    // ...theme.mixins.toolbar.dense,\r\n    height: cellSize,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    width: \"98vw\",\r\n    height: \"100vh\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\",\r\n    paddingTop: cellSize,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  cellSize: {\r\n    height: cellSize,\r\n  },\r\n  dense: {\r\n    height: cellSize,\r\n    minHeight: cellSize,\r\n  },\r\n  rootAppBar: {\r\n    height: cellSize,\r\n    zIndex: 10,\r\n  }\r\n}));\r\n\r\nconst CalendarSidebar = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const headers = Object.values(useSelector(selectCalendar).headers)\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const calendarHeaders = ['Years', 'Months', 'Day names', 'Days']\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        classes={{ root: classes.rootAppBar }}\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar variant=\"dense\" classes={{ root: classes.rootAppBar, dense: classes.dense }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Task planner\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div\r\n          className={classes.drawerHeader}\r\n        >\r\n          <Typography variant=\"h6\" >\r\n            Task list\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List style={{ padding: 0 }}>\r\n          {calendarHeaders.map((text, index) => (\r\n            headers[index] && (\r\n              < ListItem\r\n                style={{\r\n                  borderBottom: `1px solid ${theme.palette.divider}`\r\n                }}\r\n                key={index}\r\n                className={classes.cellSize}\r\n              >\r\n                <ListItemText align=\"right\" >\r\n                  {text}\r\n                </ListItemText>\r\n              </ ListItem>\r\n            )\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <SidebarTasksList />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        {props.children}\r\n      </main>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport { CalendarSidebar };\r\n","const colors =\r\n{\r\n  \"red-400\": \"#ef5350\",\r\n  \"red-500\": \"#f44336\",\r\n  \"red-600\": \"#e53935\",\r\n  // \"red-700\": \"#d32f2f\",\r\n  // \"red-800\": \"#c62828\",\r\n  // \"red-900\": \"#b71c1c\",\r\n  \"pink-300\": \"#f06292\",\r\n  \"pink-400\": \"#ec407a\",\r\n  \"pink-500\": \"#e91e63\",\r\n  \"pink-600\": \"#d81b60\",\r\n  \"pink-700\": \"#c2185b\",\r\n  // \"pink-800\": \"#ad1457\",\r\n  // \"pink-900\": \"#880e4f\",\r\n  \"purple-300\": \"#ba68c8\",\r\n  \"purple-400\": \"#ab47bc\",\r\n  // \"purple-500\": \"#9c27b0\",\r\n  \"purple-600\": \"#8e24aa\",\r\n  \"purple-700\": \"#7b1fa2\",\r\n  \"purple-800\": \"#6a1b9a\",\r\n  // \"purple-900\": \"#4a148c\",\r\n  \"deepPurple-300\": \"#9575cd\",\r\n  \"deepPurple-400\": \"#7e57c2\",\r\n  \"deepPurple-500\": \"#673ab7\",\r\n  \"deepPurple-600\": \"#5e35b1\",\r\n  // \"deepPurple-700\": \"#512da8\",\r\n  \"deepPurple-800\": \"#4527a0\",\r\n  // \"deepPurple-900\": \"#311b92\",\r\n  \"indigo-300\": \"#7986cb\",\r\n  \"indigo-400\": \"#5c6bc0\",\r\n  \"indigo-500\": \"#3f51b5\",\r\n  // \"indigo-600\": \"#3949ab\",\r\n  \"indigo-700\": \"#303f9f\",\r\n  \"indigo-800\": \"#283593\",\r\n  \"indigo-900\": \"#1a237e\",\r\n  \"lightBlue-500\": \"#2196f3\",\r\n  \"lightBlue-600\": \"#1e88e5\",\r\n  // \"lightBlue-700\": \"#1976d2\",\r\n  \"lightBlue-800\": \"#1565c0\",\r\n  \"lightBlue-900\": \"#0d47a1\",\r\n  \"cyan-700\": \"#0097a7\",\r\n  \"cyan-800\": \"#00838f\",\r\n  \"cyan-900\": \"#006064\",\r\n  \"teal-400\": \"#26a69a\",\r\n  // \"teal-500\": \"#009688\",\r\n  \"teal-600\": \"#00897b\",\r\n  \"teal-700\": \"#00796b\",\r\n  \"teal-800\": \"#00695c\",\r\n  \"teal-900\": \"#004d40\",\r\n  \"green-600\": \"#43a047\",\r\n  \"green-700\": \"#388e3c\",\r\n  \"green-800\": \"#2e7d32\",\r\n  // \"green-900\": \"#1b5e20\",\r\n  \"lightGreen-700\": \"#689f38\",\r\n  \"lightGreen-800\": \"#558b2f\",\r\n  // \"lightGreen-900\": \"#33691e\",\r\n  \"deepOrange-500\": \"#ff5722\",\r\n  \"deepOrange-600\": \"#f4511e\",\r\n  \"deepOrange-700\": \"#e64a19\",\r\n  // \"deepOrange-800\": \"#d84315\",\r\n  \"deepOrange-900\": \"#bf360c\",\r\n  // \"brown-300\": \"#a1887f\",\r\n  \"brown-400\": \"#8d6e63\",\r\n  \"brown-500\": \"#795548\",\r\n  \"brown-600\": \"#6d4c41\",\r\n  \"brown-700\": \"#5d4037\",\r\n  // \"brown-800\": \"#4e342e\",\r\n  // \"brown-900\": \"#3e2723\"\r\n}\r\nexport { colors }","import React from 'react';\r\nimport { FormControl, ListItemIcon, ListItemText, makeStyles, MenuItem, Select } from '@material-ui/core';\r\nimport { colors } from \"../common/colors\";\r\nimport StopIcon from '@material-ui/icons/Stop';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst ColorPicker = (props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        classes={{ select: classes.select }}\r\n\r\n        name=\"color\"\r\n        value={props.data.color}\r\n        onChange={props.onChange}\r\n        autoWidth\r\n        displayEmpty\r\n\r\n        id=\"color-select\">\r\n        <MenuItem value=\"\" disabled>\r\n          <em>Color</em>\r\n        </MenuItem>\r\n        {Object.entries(colors).map((color) => {\r\n          const colorName = color[0];\r\n          const colorValue = color[1];\r\n\r\n          return (\r\n            <MenuItem\r\n              key={colorName}\r\n              value={colorValue}>\r\n              <ListItemIcon>\r\n                <StopIcon\r\n                  fontSize=\"large\"\r\n                  style={{ color: colorValue }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText>\r\n                {colorName}\r\n              </ListItemText>\r\n            </MenuItem>\r\n          )\r\n        })}\r\n\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n\r\n}\r\n\r\nexport { ColorPicker };\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nconst DatePicker = (props) => {\r\n  return (\r\n    <MuiPickersUtilsProvider\r\n      utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        fullWidth\r\n        format=\"dd.MM.yyyy\"\r\n        margin=\"normal\"\r\n        id=\"date-picker-inline\"\r\n        label=\"Task start date\"\r\n        value={props.data.startDate}\r\n        onChange={props.onChange}\r\n        KeyboardButtonProps={{\r\n          'aria-label': 'change date',\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  )\r\n}\r\nexport { DatePicker }","import { Checkbox, FormControl, FormControlLabel, FormGroup, MenuItem, Select, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTasks } from '../tasksSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst MainAndParentOptions = (props) => {\r\n  const classes = useStyles()\r\n  const data = useSelector(selectTasks)\r\n  const list = [];\r\n\r\n  data.forEach((mainTask) => {\r\n    list.push({ value: mainTask.id, title: mainTask.title, nested: false })\r\n  })\r\n\r\n  return (\r\n    <FormGroup\r\n    ><FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              name=\"mainTask\"\r\n              checked={props.data.mainTask}\r\n              onChange={e => {\r\n                if (e.target.checked) {\r\n                  props.onChange({ [e.target.name]: e.target.checked, 'parent': '' })\r\n                } else {\r\n                  props.onChange({ [e.target.name]: e.target.checked })\r\n                }\r\n              }}\r\n            />}\r\n          label=\"Main task\"\r\n        />\r\n      </FormControl>\r\n      <FormControl>\r\n        <Select\r\n          value={props.data.parent}\r\n          name=\"parent\"\r\n          onChange={e => {\r\n            props.onChange({ [e.target.name]: e.target.value })\r\n          }}\r\n          disabled={props.data.mainTask}\r\n          autoWidth\r\n          displayEmpty\r\n\r\n          id=\"grouped-select\">\r\n          <MenuItem value=\"\" disabled>\r\n            Parent task\r\n              </MenuItem>\r\n          {\r\n            list.map((task, index) => {\r\n              return (\r\n                <MenuItem\r\n                  key={index}\r\n                  className={task.nested ? classes.nested : ''}\r\n                  value={task.value}>\r\n                  {task.title}\r\n                </MenuItem>\r\n              )\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n    </FormGroup>\r\n  )\r\n}\r\nexport { MainAndParentOptions }","\r\nimport React from 'react'\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nconst SelectWithAdd = (props) => {\r\n  const filter = createFilterOptions();\r\n  return (\r\n    <Autocomplete\r\n      value={props.value}\r\n      onChange={(event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n          props.onChange({\r\n            [props.name]: newValue,\r\n          });\r\n        } else if (newValue && newValue.inputValue) {\r\n          // Create a new value from the user input\r\n          props.onChange({\r\n            [props.name]: newValue.inputValue,\r\n          });\r\n        } else {\r\n          props.onChange(newValue);\r\n        }\r\n      }}\r\n\r\n      filterOptions={(options, params) => {\r\n        const filtered = filter(options, params);\r\n\r\n        // Suggest the creation of a new value\r\n        if (params.inputValue !== '') {\r\n          filtered.push({\r\n            inputValue: params.inputValue,\r\n            [props.name]: `Add category: ${params.inputValue}`,\r\n          });\r\n        }\r\n\r\n        return filtered;\r\n      }}\r\n      selectOnFocus\r\n      clearOnBlur\r\n      handleHomeEndKeys\r\n      id={props.id}\r\n      options={props.options}\r\n      getOptionLabel={(option) => {\r\n        // Value selected with enter, right from the input\r\n        if (typeof option === 'string') {\r\n          return option;\r\n        }\r\n        // Add \"xxx\" option created dynamically\r\n        if (option.inputValue) {\r\n          return option.inputValue;\r\n        }\r\n        // Regular option\r\n        return option[props.name];\r\n      }}\r\n      renderOption={(option) => option[props.name]}\r\n\r\n      freeSolo\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={props.label}\r\n\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\nexport { SelectWithAdd }\r\n","\r\nimport { FormControl, makeStyles, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ColorPicker } from './ColorPicker';\r\nimport { addDays } from '../common/dateHelper';\r\nimport { DatePicker } from './DatePicker';\r\nimport { MainAndParentOptions } from './MainAndParentOptions';\r\nimport { SelectWithAdd } from './SelectWithAdd';\r\nimport { selectCustom } from '../tasksSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  form: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '2fr 1fr',\r\n    columnGap: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AddTaskForm = (props) => {\r\n  const classes = useStyles();\r\n  const categories = useSelector(selectCustom).categories\r\n    .map((category) => {\r\n      return { 'category': category }\r\n    })\r\n  const people = useSelector(selectCustom).people\r\n    .map((person) => {\r\n      return { 'responsible': person }\r\n    })\r\n\r\n  // TODO: change from object to consts. Right know each key event in text fields rerenders whole form and causes lags\r\n  let initialState = {}\r\n  if (props.initialData.id) {\r\n    initialState = props.initialData\r\n  } else {\r\n    initialState = {\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      mainTask: false,\r\n      startDate: 0,\r\n      duration: 0,\r\n      parent: '',\r\n      category: '',\r\n      responsible: '',\r\n      color: '',\r\n      tasks: [],\r\n    }\r\n  }\r\n\r\n  const [data, setData] = useState(initialState)\r\n\r\n  const handleChangeData = (value) => {\r\n    setData({ ...data, ...value });\r\n  };\r\n\r\n  const sendData = () => {\r\n    dataValidation(data)\r\n    props.onChange(data)\r\n  }\r\n\r\n  const dataValidation = (inputData) => {\r\n    let valid = false;\r\n    if (inputData.title === '') {\r\n      valid = false;\r\n    } else if (inputData.description === '') {\r\n      valid = false;\r\n    } else if (inputData.startDate === 0) {\r\n      valid = false;\r\n    } else if (inputData.duration === 0) {\r\n      valid = false;\r\n    } else if (inputData.mainTask === false && inputData.parent === '') {\r\n      valid = false;\r\n    } else if (inputData.category === '') {\r\n      valid = false;\r\n    } else if (inputData.responsible === '') {\r\n      valid = false;\r\n    } else if (inputData.color === '') {\r\n      valid = false;\r\n    } else {\r\n      valid = true;\r\n    }\r\n    props.dataValidation(valid)\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className={classes.form}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onChange={sendData}\r\n      onBlur={sendData}\r\n    >\r\n\r\n      <div className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            id=\"title-input\"\r\n            name=\"title\"\r\n            label=\"New task name\"\r\n            value={data.title}\r\n            inputProps={{ maxlength: 50 }}\r\n            onChange={e => {\r\n              handleChangeData({ [e.target.name]: e.target.value })\r\n            }} />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <SelectWithAdd\r\n            id=\"select-category-input\"\r\n            name=\"category\"\r\n            label=\"Choose category or enter new\"\r\n            options={categories}\r\n            value={data.category}\r\n            onChange={e => {\r\n              handleChangeData(e)\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            id=\"description-name\"\r\n            label=\"Description\"\r\n            value={data.description}\r\n            onChange={e => {\r\n              handleChangeData({ 'description': e.target.value })\r\n            }}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <SelectWithAdd\r\n            id=\"select-person-input\"\r\n            name=\"responsible\"\r\n            label=\"Choose person responsible or enter new\"\r\n            options={people}\r\n            value={data.responsible}\r\n            onChange={e => {\r\n              handleChangeData(e)\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n          <MainAndParentOptions\r\n            onChange={e => {\r\n              handleChangeData(e)\r\n            }}\r\n            data={data}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <ColorPicker\r\n            onChange={e => {\r\n              handleChangeData({ [e.target.name]: e.target.value })\r\n            }}\r\n            data={data}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <DatePicker\r\n            onChange={e => {\r\n              handleChangeData({ \"startDate\": addDays(e) })\r\n            }}\r\n            data={data}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            id=\"task-duration-input\"\r\n            label=\"Task duration\"\r\n            name=\"duration\"\r\n            value={data.duration}\r\n            onChange={e => {\r\n              handleChangeData({ [e.target.name]: Number(e.target.value) })\r\n            }}\r\n            type=\"number\"\r\n            inputProps={{\r\n              \"min\": 1,\r\n              \"step\": 1,\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </form >\r\n  )\r\n}\r\n\r\nexport { AddTaskForm };\r\n","\r\nimport { Button, DialogActions, DialogContent, DialogTitle, IconButton, Tooltip } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addDays } from '../common/dateHelper';\r\nimport { addCategory, addEditMainTask, addEditTask, addPerson, selectCalendar, setCalendar, setMessage } from '../tasksSlice';\r\nimport { AddTaskForm } from './AddTaskForm';\r\n\r\n\r\nconst AddTaskDialog = (props) => {\r\n  const [data, setData] = useState(props.data || {});\r\n  const [validData, setValidData] = useState(false)\r\n\r\n  const handleDataInput = (formData) => {\r\n    setData(formData)\r\n  }\r\n\r\n  const handleDataValidation = (isDataValid) => {\r\n    setValidData(isDataValid)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.handleClose(true)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const calendar = useSelector(selectCalendar)\r\n\r\n  const saveData = () => {\r\n    const id = data.id || Math.floor(Math.random() * 10000);\r\n    const endDate = addDays(data.startDate, data.duration);\r\n    const completion = data.completion || '0%';\r\n    const objectToSave = { ...data, ...{ \"id\": id, \"endDate\": endDate, \"completion\": completion } }\r\n    if (data.mainTask) {\r\n      dispatch(addEditMainTask(objectToSave))\r\n    } else {\r\n      dispatch(addEditTask({ \"target\": objectToSave.parent, \"data\": objectToSave }))\r\n    }\r\n    const message = data.id === '' ? `Task \"${data.title}\" added` : `Task \"${data.title}\" modified`\r\n    dispatch(setMessage(message))\r\n\r\n    const leftBoundaryDate = addDays(objectToSave.startDate, -15);\r\n    const rightBoundaryDate = addDays(objectToSave.endDate, 15);\r\n    dispatch(setCalendar(\r\n      {\r\n        firstDay: Math.min(leftBoundaryDate, calendar.firstDay),\r\n        lastDay: Math.max(rightBoundaryDate, calendar.lastDay)\r\n      }))\r\n    dispatch(addCategory(data.category))\r\n    dispatch(addPerson(data.responsible))\r\n    handleClose()\r\n  }\r\n  return (\r\n    < React.Fragment >\r\n      <DialogTitle\r\n        style={{ cursor: 'move' }}\r\n        id={`draggable-dialog-${props.name}`}>\r\n        Add task\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <AddTaskForm\r\n          initialData={data}\r\n          onChange={handleDataInput}\r\n          dataValidation={handleDataValidation}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Tooltip title={!validData ? 'All fields must be filled in to save' : ''}>\r\n          <span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={saveData}\r\n              startIcon={<SaveAltIcon />}\r\n              disabled={!validData}\r\n            >\r\n              Save\r\n        </Button>\r\n          </span>\r\n        </Tooltip>\r\n        <Tooltip title={'Close'}>\r\n          <IconButton\r\n            onClick={() => handleClose()}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </DialogActions>\r\n      {Object.keys(data).length === 0}\r\n    </ React.Fragment>\r\n  )\r\n}\r\n\r\nexport { AddTaskDialog };\r\n\r\n","import Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTask, setMessage } from '../tasksSlice';\r\n\r\n\r\nconst DeleteDialog = (props) => {\r\n  const dispatch = useDispatch()\r\n  const dialogText = () => {\r\n    if (props.task.mainTask) {\r\n      return (\r\n        <React.Fragment>\r\n          <DialogContentText align=\"center\">\r\n            \"{props.task.title}\"\r\n          </DialogContentText>\r\n          <DialogContentText align=\"center\">\r\n            and each of its subtasks?\r\n          </DialogContentText>\r\n        </React.Fragment>\r\n        )\r\n    } else {\r\n      return (<DialogContentText align=\"center\">\"{props.task.title}\" ?</DialogContentText>)\r\n    }\r\n  }\r\n\r\nconst handleDelete = () => {\r\n  dispatch(deleteTask(props.task))\r\n  dispatch(setMessage(`Task \"${props.task.title}\" removed`))\r\n  props.handleClose(true)\r\n}\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DialogTitle\r\n        style={{ cursor: 'move' }}\r\n        id={`draggable-dialog - ${props.title} `}\r\n      >This action cannot be undone</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Are you sure you want to remove task:\r\n          </DialogContentText>\r\n        {dialogText()}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button \r\n          variant=\"contained\"\r\n          autoFocus \r\n          onClick={props.handleClose} \r\n          color=\"secondary\">\r\n          No\r\n          </Button>\r\n        <Button \r\n          variant=\"contained\"\r\n          onClick={handleDelete} \r\n          color=\"primary\" \r\n        >\r\n          Yes\r\n          </Button>\r\n      </DialogActions>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { DeleteDialog };\r\n","import React from 'react';\r\nimport { Paper, Dialog } from '@material-ui/core';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle={`#draggable-dialog-${props.name}`} cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nconst DraggableDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      PaperComponent={PaperComponent}\r\n      PaperProps={{ 'name': props.name }}\r\n      aria-labelledby={`draggable-dialog-${props.name}`}\r\n      children={props.children}\r\n    >\r\n    </Dialog>\r\n  )\r\n}\r\nexport { DraggableDialog }\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    alignItems: 'center'\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nconst LetterAvatar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Avatar className={classes.orange}>{props.responsible.charAt(0)}</Avatar>\r\n      <Typography>{props.responsible}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { LetterAvatar }","import React, { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { IconButton, TextField, InputAdornment } from \"@material-ui/core\"\r\nimport { setCompletion } from \"../tasksSlice\"\r\n\r\nconst TaskCompletionIndicator = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [value, setValue] = useState(props.data.completion.slice(0, -1))\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  const startEditing = () => {\r\n    setEdit(true)\r\n  }\r\n\r\n  const endEditing = () => {\r\n    setEdit(false)\r\n    const completionValue = roundedValue(value) + '%'\r\n    dispatch(setCompletion({ data: props.data, completion: completionValue }))\r\n    console.log(completionValue)\r\n  }\r\n\r\n  const roundedValue = (inputValue) => {\r\n    const val = Math.round(Number(inputValue))\r\n    if (val > 100) {\r\n      return 100\r\n    } else if (val < 0) {\r\n      return 0\r\n    } else {\r\n      return val\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {edit\r\n        ? (<IconButton\r\n          disableRipple\r\n        >\r\n\r\n          <TextField\r\n            autoFocus\r\n            onChange={handleChange}\r\n            onBlur={endEditing}\r\n            value={value}\r\n            inputProps={{\r\n              type: \"number\",\r\n              max: 100,\r\n              min: 0\r\n            }}\r\n            margin=\"none\"\r\n            id=\"standard-end-adornment\"\r\n            className=\"completion\"\r\n            style={{\r\n              width: '3rem',\r\n            }}\r\n            // className={clsx(classes.margin, classes.textField)}\r\n            InputProps={{\r\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\r\n            }}\r\n          />\r\n        </IconButton>)\r\n        : (<IconButton\r\n          aria-label=\"completion\"\r\n          onClick={startEditing}\r\n        >\r\n          {props.data.completion}\r\n        </IconButton>)\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { TaskCompletionIndicator }\r\n\r\n\r\n\r\n\r\n","import { Card, CardActions, CardContent, CardHeader, Container, IconButton, Tooltip, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, { useState } from \"react\";\r\nimport { AddTaskDialog } from \"../dialogs/AddTaskDialog\";\r\nimport { DeleteDialog } from \"../dialogs/DeleteDialog\";\r\nimport { DraggableDialog } from \"../dialogs/DraggableDialog\";\r\nimport { LetterAvatar } from \"./LetterAvatar\";\r\nimport { SidebarTasksNestedList } from \"./SidebarTasksNestedList\";\r\nimport { TaskCompletionIndicator } from \"./TaskCompletionIndicator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    wordBreak: \"break-all\"\r\n  }\r\n}));\r\n\r\nconst CalendarTaskPopper = (props) => {\r\n  const classes = useStyles()\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const handleOpenEdit = () => {\r\n    setOpenEdit(true)\r\n  }\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false)\r\n  }\r\n\r\n  const handleOpenDelete = () => {\r\n    setOpenDelete(true)\r\n  }\r\n\r\n  const handleCloseDelete = () => {\r\n    setOpenDelete(false)\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      disableGutters\r\n      maxWidth=\"xs\">\r\n\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          title={props.data.title}\r\n          subheader={props.data.category}\r\n          action={!props.data.mainTask ?\r\n            <TaskCompletionIndicator\r\n              data={props.data}\r\n            />\r\n            : ''\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textSecondary\"\r\n            component=\"p\">\r\n            {props.data.description}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n        {props.data.mainTask && (\r\n          <SidebarTasksNestedList\r\n            data={props.data}\r\n            startOpen={false}\r\n            title=\"Subtasks list\"\r\n          />)\r\n        }\r\n        <CardActions style={{ justifyContent: 'space-between' }}>\r\n          <LetterAvatar responsible={props.data.responsible} />\r\n          <div>\r\n            <Tooltip title={'Delete'}>\r\n              <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={handleOpenDelete}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={'Edit'}>\r\n              <IconButton\r\n                aria-label=\"edit\"\r\n                onClick={handleOpenEdit}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={'Close'}>\r\n              <IconButton\r\n                onClick={(event) => props.click(event)}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n        <DraggableDialog\r\n          open={openEdit}\r\n          title={'edit'}\r\n          handleClose={handleCloseEdit}\r\n        >\r\n          <AddTaskDialog\r\n            title={'edit'}\r\n            data={props.data}\r\n            handleClose={handleCloseEdit}\r\n          />\r\n        </DraggableDialog>\r\n        <DraggableDialog\r\n          open={openDelete}\r\n          title={'delete'}\r\n          handleClose={handleCloseDelete}\r\n        >\r\n          <DeleteDialog\r\n            title={'delete'}\r\n            task={props.data}\r\n            handleClose={handleCloseDelete}\r\n\r\n          />\r\n        </DraggableDialog>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { CalendarTaskPopper };\r\n","import { Typography } from '@material-ui/core';\r\nimport { Fade, Paper, Popper } from \"@material-ui/core/\";\r\nimport React, { useState } from 'react';\r\nimport { CalendarTaskPopper } from './CalendarTaskPopper';\r\nimport { cellSize, TableTask } from './tables';\r\n\r\n\r\nconst CalendarMainTask = (props) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(open === false ? true : false);\r\n  };\r\n\r\n  return (\r\n    <TableTask\r\n      className=\"task\"\r\n      id={props.data.id}\r\n      color={props.data.color}\r\n      style={{\r\n        gridColumn: `span ${props.data.duration}`,\r\n      }}>\r\n      <div\r\n        onClick={handleClick()}\r\n        style={\r\n          {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: cellSize,\r\n            bottom: cellSize,\r\n            paddingLeft: '1rem',\r\n            paddingRight: '1rem'\r\n          }\r\n        }>\r\n        <Typography\r\n          style={{\r\n            color: '#fff',\r\n            overflow: 'hidden'\r\n          }}>\r\n          {props.data.title}\r\n        </Typography>\r\n      </div>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        placement=\"bottom-start\"\r\n        transition\r\n        style={{ zIndex: '11' }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper>\r\n              <CalendarTaskPopper\r\n                data={props.data}\r\n                click={handleClick()}\r\n              />\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </ TableTask>\r\n  )\r\n\r\n}\r\nexport { CalendarMainTask };\r\n","import { Fade, Paper, Popper, Tooltip, Typography, Grow } from \"@material-ui/core/\";\r\nimport React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { CalendarTaskPopper } from './CalendarTaskPopper';\r\nimport { cellSize, TableTask } from \"./tables\";\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  posistion: relative;\r\n`;\r\n\r\nconst CalendarTask = (props) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => event => {\r\n    setAnchorEl(event.currentTarget);\r\n    setOpen(open === false ? true : false);\r\n  };\r\n\r\n  const checkColors = () => {\r\n    if (props.mainTaskDates.start > props.data.startDate || props.mainTaskDates.end < props.data.endDate) {\r\n      return ('#d50000')\r\n    } else if (props.data.completion === \"100%\") {\r\n      return (\"#505050\")\r\n    } else {\r\n      return (props.data.color)\r\n    }\r\n  }\r\n  return (\r\n\r\n    <Grow\r\n      in={true}\r\n      style={{ transformOrigin: '0 0 0' }}\r\n    // {...(checked ? { timeout: 1000 } : {})}\r\n    >\r\n      < TableTask\r\n        className=\"task\"\r\n        id={`task-${props.data.id}`}\r\n        color={checkColors()}\r\n        style={{\r\n          gridColumn: `span ${props.data.duration}`,\r\n        }}>\r\n        <Tooltip\r\n          title={checkColors() === '#d50000' ? 'Subtask should be contained inside a main task' : ''}\r\n          arrow\r\n        >\r\n\r\n          <Header onClick={handleClick()}>\r\n            <div style={\r\n              {\r\n                width: props.data.completion,\r\n                height: '100%',\r\n                backgroundColor: 'black',\r\n                opacity: 0.2,\r\n              }\r\n            } />\r\n            <div style={\r\n              {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                height: cellSize,\r\n                position: 'relative',\r\n                bottom: cellSize,\r\n                paddingLeft: '1rem',\r\n                paddingRight: '1rem'\r\n              }\r\n            }>\r\n              <Typography style=\r\n                {{\r\n                  color: '#fff',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis'\r\n                }}>\r\n                {props.data.title}\r\n              </Typography>\r\n            </div>\r\n          </Header>\r\n        </Tooltip>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          style={{ zIndex: '11' }}\r\n        >\r\n          {({ TransitionProps }) => (\r\n            <Fade {...TransitionProps} timeout={350}>\r\n              <Paper>\r\n                <CalendarTaskPopper\r\n                  data={props.data}\r\n                  click={handleClick()}\r\n                />\r\n              </Paper>\r\n            </Fade>\r\n          )}\r\n        </Popper>\r\n      </TableTask >\r\n    </Grow>\r\n  )\r\n\r\n}\r\nexport { CalendarTask };\r\n\r\n","import { useTheme } from '@material-ui/core';\r\nimport React, { useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { customGetDate, dateDifference, datesBetween } from '../common/dateHelper';\r\nimport { selectCalendar, selectGridLines, selectTasks, selectToday } from '../tasksSlice';\r\nimport { CalendarMainTask } from './CalendarMainTask';\r\nimport { CalendarTask } from './CalendarTask';\r\nimport { cellSize, TableCell, TableRow, TableSectionTasks } from './tables';\r\n\r\nconst ContainerTasks = styled.div`\r\n// width: 90vw;\r\n// overflow-x: scroll;\r\n// padding-top: 9rem;\r\nheight: calc(100vh - ${cellSize} * 1.5 - ${cellSize} * ${props => props.headerCount});\r\noverflow: auto;\r\nwidth: max-content;\r\n\r\nborder: 1px solid ${props => props.color};\r\nscroll-behavior: smooth;\r\n-ms-overflow-style: none;  /* Internet Explorer 10+ */\r\nscrollbar-width: none;  /* Firefox */\r\n&::-webkit-scrollbar { \r\n  display: none;  /* Safari and Chrome */\r\n`\r\n\r\nconst CalendarTasks = () => {\r\n  const today = useSelector(selectToday)\r\n  const calendar = useSelector(selectCalendar)\r\n  const data = useSelector(selectTasks)\r\n  const gridLines = useSelector(selectGridLines)\r\n  const gtc = `repeat(${dateDifference(calendar.firstDay, calendar.lastDay) + 1}, ${cellSize})`\r\n  const theme = useTheme();\r\n  const headerCount = Object.values(calendar.headers).filter(val => val).length\r\n  const tasksRef = useRef(null)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ContainerTasks\r\n        color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n        ref={tasksRef}\r\n        headerCount={headerCount}\r\n      >\r\n        {\r\n          data.map((mainTask, index) => {\r\n            return (\r\n              <TableSectionTasks key={index}>\r\n                <TableRow\r\n                  gtc={gtc}\r\n                  className=\"maintask\">\r\n                  {\r\n                    datesBetween(calendar.firstDay, calendar.lastDay, [mainTask.startDate, mainTask.duration])\r\n                      .map((day, index) => {\r\n                        if (day === mainTask.startDate) {\r\n                          return (\r\n                            <CalendarMainTask\r\n                              key={index}\r\n                              data={mainTask}\r\n                            />\r\n                          )\r\n                        } else {\r\n                          return (\r\n                            <TableCell\r\n                              color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n                              className={day === today ? 'today' : 'else'}\r\n                              id={`${mainTask.id}-${customGetDate(day)}`}\r\n                              key={index} />\r\n\r\n                          )\r\n                        }\r\n                      })}\r\n                </TableRow>\r\n                {\r\n                  mainTask.tasks\r\n                    .map((task, index) => {\r\n                      return (\r\n                        <TableRow\r\n                          gtc={gtc}\r\n                          key={index}\r\n                          className=\"task\">\r\n                          {\r\n                            datesBetween(calendar.firstDay, calendar.lastDay, [task.startDate, task.duration])\r\n                              .map((day, index) => {\r\n                                if (day === task.startDate) {\r\n                                  return (\r\n                                    <CalendarTask\r\n                                      mainTaskDates={{ start: mainTask.startDate, end: mainTask.endDate }}\r\n                                      key={index}\r\n                                      data={task}\r\n                                    />\r\n                                  )\r\n                                } else {\r\n                                  return (\r\n                                    <TableCell\r\n                                      color={gridLines ? theme.palette.divider : 'rgba(0,0,0,0)'}\r\n                                      className={day === today ? 'today' : 'else'}\r\n                                      id={`${task.id}-${customGetDate(day)}`}\r\n                                      key={index} />\r\n                                  )\r\n                                }\r\n                              })}\r\n                        </TableRow>\r\n                      )\r\n                    })}\r\n              </TableSectionTasks>\r\n            )\r\n          })\r\n        }\r\n      </ContainerTasks>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { CalendarTasks };\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Checkbox, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, FormGroup, FormLabel, IconButton, Switch, Tooltip } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { selectCalendar, selectDarkMode, selectGridLines, setCalendar, setDarkMode, setGridLines } from '../tasksSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction SwitchLabels() {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const darkMode = useSelector(selectDarkMode)\r\n  const gridLines = useSelector(selectGridLines)\r\n  const headers = useSelector(selectCalendar).headers\r\n\r\n  const handleChangeRedux = (event) => {\r\n    switch (event.target.name) {\r\n      case \"darkMode\":\r\n        dispatch(setDarkMode(event.target.checked));\r\n        break;\r\n      case \"gridLines\":\r\n        dispatch(setGridLines(event.target.checked));\r\n        break;\r\n      case \"year\":\r\n        dispatch(setCalendar({ 'headers': { ...headers, ...{ \"year\": event.target.checked } } }))\r\n        break;\r\n      case \"month\":\r\n        dispatch(setCalendar({ 'headers': { ...headers, ...{ \"month\": event.target.checked } } }))\r\n        break;\r\n      case \"shortDay\":\r\n        dispatch(setCalendar({ 'headers': { ...headers, ...{ \"shortDay\": event.target.checked } } }))\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.root}>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n          <FormLabel component=\"legend\">View</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={darkMode}\r\n                  onChange={handleChangeRedux}\r\n                  name=\"darkMode\" />}\r\n              label=\"Dark mode\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={gridLines}\r\n                  onChange={handleChangeRedux}\r\n                  name=\"gridLines\"\r\n                />\r\n              }\r\n              label=\"Grid lines\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n      <div className={classes.root}>\r\n        <FormControl component=\"fieldset\" className={classes.formControl}>\r\n\r\n          <FormLabel component=\"legend\">Calendar headers:</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={headers.year}\r\n                  onChange={handleChangeRedux}\r\n                  name=\"year\" />}\r\n              label=\"Years\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={headers.month}\r\n                  onChange={handleChangeRedux}\r\n                  name=\"month\" />}\r\n              label=\"Months\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={headers.shortDay}\r\n                  onChange={handleChangeRedux}\r\n                  name=\"shortDay\" />}\r\n              label=\"Day names\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </div>);\r\n\r\n}\r\n\r\nconst OptionsDialog = (props) => {\r\n  return (\r\n    < React.Fragment >\r\n      <DialogTitle style={{ cursor: 'move' }} id={`draggable-dialog-${props.title}`}>\r\n        Options\r\n        </DialogTitle>\r\n      <DialogContent>\r\n        <SwitchLabels />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Tooltip title={'Close'}>\r\n          <IconButton\r\n            onClick={props.handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </DialogActions>\r\n    </ React.Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport { OptionsDialog };\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Snackbar from '@material-ui/core/Snackbar';\r\nimport React from 'react';\r\n\r\nconst SnackbarStatus = (props) => {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={props.open}\r\n        onClose={() => props.close(true)}\r\n        message={props.message}\r\n        key={props.id}\r\n        autoHideDuration={2000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { SnackbarStatus };\r\n","import { Backdrop, Box, Fab, makeStyles, Tooltip, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirstRender } from '../common/useFirstRender';\r\nimport { selectLastMessage, selectTasks } from '../tasksSlice';\r\nimport { AddTaskDialog } from './AddTaskDialog';\r\nimport { DraggableDialog } from './DraggableDialog';\r\nimport { OptionsDialog } from './OptionsDialog';\r\nimport { SnackbarStatus } from './SnackbarStatus';\r\nimport { now } from '../common/dateHelper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin2: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(7),\r\n    right: theme.spacing(7),\r\n  },\r\n  margin1: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(7),\r\n    right: theme.spacing(17),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  centralContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  central: {\r\n    width: '5rem',\r\n    height: '5rem',\r\n    margin: theme.spacing(3)\r\n  }\r\n\r\n}));\r\n\r\nconst FABs = () => {\r\n  const classes = useStyles();\r\n  const tasks = useSelector(selectTasks)\r\n  const message = useSelector(selectLastMessage)\r\n  const isFirstRender = useFirstRender()\r\n\r\n  const [openOptions, setOpenOptions] = useState(false);\r\n  const [openAdd, setOpenAdd] = useState(false);\r\n  const [openBackdrop, setOpenBackdrop] = useState(false);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false)\r\n  const [options, add, backdrop, snackbar] = ['options', 'add', 'backdrop', 'snackbar']\r\n\r\n  useEffect(() => {\r\n    if (tasks.length === 0) {\r\n      handleOpen(backdrop)\r\n    } else {\r\n      handleClose(backdrop)\r\n    }\r\n  },\r\n    [tasks.length, backdrop])\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender) {\r\n      // intentional empty block\r\n    } else {\r\n      handleOpen(snackbar)\r\n    }\r\n  }, [message, snackbar])\r\n\r\n\r\n  const handleOpen = (type) => {\r\n    switch (type) {\r\n      case 'options':\r\n        setOpenOptions(true)\r\n        break;\r\n      case 'add':\r\n        setOpenAdd(true)\r\n        break;\r\n      case 'backdrop':\r\n        setOpenBackdrop(true)\r\n        break;\r\n      case 'snackbar':\r\n        setOpenSnackbar(true)\r\n        break;\r\n      default:\r\n        console.warn('Broken dialog opening')\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleClose = (type) => {\r\n    switch (type) {\r\n      case 'options':\r\n        setOpenOptions(false)\r\n        break;\r\n      case 'add':\r\n        setOpenAdd(false)\r\n        break;\r\n      case 'backdrop':\r\n        setOpenBackdrop(false)\r\n        break;\r\n      case 'snackbar':\r\n        setOpenSnackbar(false)\r\n        break;\r\n      default:\r\n        console.warn('Broken dialog closing')\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Tooltip title={'Options'}>\r\n        <Fab\r\n          className={classes.margin1}\r\n          size=\"small\"\r\n          color=\"secondary\"\r\n          aria-label=\"options\"\r\n          onClick={() => handleOpen(options)}\r\n        >\r\n          <SettingsIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Tooltip title={'Add task'}>\r\n        <Fab\r\n          className={classes.margin2}\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          onClick={() => handleOpen(add)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <DraggableDialog\r\n        open={openOptions}\r\n        name={options}\r\n        handleClose={() => handleClose(options)}\r\n      >\r\n        <OptionsDialog\r\n          name={options}\r\n          handleClose={() => handleClose(options)}\r\n        />\r\n      </DraggableDialog>\r\n      <DraggableDialog\r\n        open={openAdd}\r\n        name={add}\r\n      // handleClose={() => handleClose(add)}    i dont want to accidently close during adding\r\n      >\r\n        <AddTaskDialog\r\n          name={add}\r\n          handleClose={() => handleClose(add)}\r\n        />\r\n      </DraggableDialog>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={openBackdrop}\r\n      >\r\n        <Box\r\n          className={classes.centralContainer}\r\n        >\r\n          <Typography\r\n            variant=\"h3\"\r\n          >\r\n            Add first task\r\n            </Typography>\r\n          <Fab\r\n            className={classes.central}\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            onClick={() => handleOpen(add)}\r\n          >\r\n            <AddIcon\r\n              style={{ width: '2.5rem', height: '2.5rem' }}\r\n            />\r\n          </Fab>\r\n        </Box>\r\n      </Backdrop >\r\n      <SnackbarStatus\r\n        message={message}\r\n        open={openSnackbar}\r\n        close={() => handleClose(snackbar)}\r\n        id={`${now()}-snackbar`}\r\n      />\r\n    </Box >\r\n  )\r\n}\r\nexport { FABs };\r\n\r\n","import { useRef, useEffect } from 'react';\r\n\r\nconst useFirstRender = () => {\r\n  const firstRender = useRef(true);\r\n  useEffect(() => {\r\n    firstRender.current = false;\r\n  }, []);\r\n  return firstRender.current;\r\n};\r\n\r\nexport { useFirstRender }","import React from 'react';\r\nimport { CalendarHeader } from './CalendarHeader';\r\nimport { CalendarSidebar } from './CalendarSidebar';\r\nimport { CalendarTasks } from './CalendarTasks';\r\nimport { FABs } from '../dialogs/FABs';\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <React.Fragment >\r\n      <CalendarSidebar>\r\n        <CalendarHeader />\r\n        <CalendarTasks />\r\n      </CalendarSidebar>\r\n      <FABs />\r\n    </ React.Fragment>\r\n  )\r\n}\r\n\r\nexport { Calendar }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { saveConsent, checkConsent } from '../common/localStorage';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMessage } from '../tasksSlice';\r\n\r\nexport default function AlertDialog() {\r\n  const storageConsent = checkConsent()\r\n  const [open, setOpen] = React.useState(true);\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (storageConsent) {\r\n      setOpen(false)\r\n    }\r\n  }, [storageConsent])\r\n\r\n  const handleClose = (decision) => {\r\n    if (decision) {\r\n      saveConsent(decision)\r\n      dispatch(setMessage('LocalStorage enabled'))\r\n    }\r\n    setOpen(false)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n      // aria-labelledby=\"localStorage use consent\"\r\n      // aria-describedby=\"alert asking if you want to enable localStorage\"\r\n      >\r\n        <DialogTitle>{\"Do you want to enable localStorage?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            localStorage is a type of web storage that allows JavaScript sites and apps to store and access data right in the browser with no expiration date. This means the data stored in the browser will persist even after the browser window has been closed.\r\n            If you do not want this page to save data on your computer, press decline.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleClose(false)}\r\n            color=\"secondary\">\r\n            Decline\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleClose(true)}\r\n            color=\"primary\"\r\n            autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}","import React from 'react';\r\nimport { Calendar } from './calendar/Calendar';\r\nimport AlertDialog from './dialogs/AlertDialog';\r\n\r\nconst Tasks = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <AlertDialog />\r\n      <Calendar />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport { Tasks }","import { CssBaseline, ThemeProvider, useMediaQuery } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport { checkConsent } from './features/tasks/common/localStorage';\r\nimport { Tasks } from './features/tasks/Tasks';\r\nimport { selectDarkMode, setDarkMode } from './features/tasks/tasksSlice';\r\nimport { Theme } from './Theme';\r\n\r\n\r\nfunction App() {\r\n\r\n  const darkMode = useSelector(selectDarkMode)\r\n  const dispatch = useDispatch();\r\n  const primaryColor = '#e91e63'\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');   // check prefered user mode \r\n  const theme = Theme(darkMode, primaryColor);\r\n  const cookies = checkConsent()\r\n\r\n  useEffect(() => {\r\n    if (typeof (cookies) === 'undefined') {\r\n      dispatch(setDarkMode(prefersDarkMode))\r\n    }\r\n  }, [prefersDarkMode, dispatch, cookies])\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Tasks />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport { useMemo } from \"react\"\r\n\r\nconst Theme = (darkMode, primaryColor) => {\r\n\r\n  return useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: darkMode ? 'dark' : 'light',\r\n          primary: {\r\n            main: primaryColor, //'#e91e63'\r\n          },\r\n          secondary: {\r\n            main: '#2962ff',\r\n          },\r\n          tonalOffset: 0.2,\r\n\r\n        },\r\n      }), [darkMode, primaryColor],\r\n  );\r\n}\r\n\r\nexport { Theme }\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from '../features/tasks/tasksSlice'\r\nimport { loadLocalStorage, saveLocalStorage, checkConsent } from '../features/tasks/common/localStorage';\r\n\r\nconst persistedState = loadLocalStorage();\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksReducer,\r\n  },\r\n  preloadedState: {\r\n    tasks: persistedState,\r\n  }\r\n});\r\n\r\nstore.subscribe(() => {\r\n  if (checkConsent() === true) {\r\n    saveLocalStorage(store.getState().tasks)\r\n  }\r\n})\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <CssBaseline />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}